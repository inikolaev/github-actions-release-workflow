name: Draft release

on:
  push:
    tags:
      - "production*"

jobs:
  create-draft-release:
    name: Create draft release
    runs-on: ubuntu-latest
    steps:
      - name: Create release name
        shell: bash
        id: release_name
        run: |
          echo "${GITHUB_REF} -> ${GITHUB_REF#production-}"
          echo "${GITHUB_REF_NAME} -> ${GITHUB_REF_NAME#production-}"
          echo "::set-output name=release_name::${GITHUB_REF_NAME#production-}"
      - name: Create draft release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.release_name.outputs.release_name }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: true
          prerelease: false
      - name: Label latest release
        uses: actions/github-script@v6
        with:
          script: |
            refInfo = {
              owner: context.repo.owner,
              ref: `refs/tags/${args.automaticReleaseTag}`,
              repo: context.repo.repo,
              sha: context.sha,
            }
            core.startGroup('Generating latest release tag');
            const friendlyTagName = refInfo.ref.substring(10); // 'refs/tags/latest' => 'latest'
            core.info(`Attempting to create or update release tag "${friendlyTagName}"`);

            try {
              await github.git.createRef(refInfo);
            } catch (err) {
              const existingTag = refInfo.ref.substring(5); // 'refs/tags/latest' => 'tags/latest'
              core.info(
                `Could not create new tag "${refInfo.ref}" (${err.message}) therefore updating existing tag "${existingTag}"`,
              );
              await github.git.updateRef({
                ...refInfo,
                ref: existingTag,
                force: true,
              });
            }

            core.info(`Successfully created or updated latest release tag "${friendlyTagName}"`);
            core.endGroup();
